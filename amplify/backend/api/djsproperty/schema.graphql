type Area @model @auth(rules: [{ allow: public, provider: iam }]) {
  id: ID!
  name: String!
  description: String!
  image: String!
  residences: [Residence] @connection(keyName: "byArea", fields: ["id"])
}

type Residence
  @model
  @auth(rules: [{ allow: public, provider: iam }])
  @key(
    name: "byArea"
    fields: [
      "areaID"
      "name"
      "address"
      "city"
      "postalCode"
      "totalUnits"
      "totalCapacity"
      "feature"
      "image"
    ]
  ) {
  id: ID!
  name: String!
  address: String!
  city: String!
  postalCode: Int!
  totalUnits: Int
  totalCapacity: Int!
  feature: [String]
  image: String

  areaID: ID!
  area: Area @connection(fields: ["areaID"])

  units: [Unit] @connection(keyName: "byResidence", fields: ["id"])
}

type Unit
  @model
  @auth(rules: [{ allow: public, provider: iam }])
  @key(
    name: "byResidence"
    fields: [
      "residenceID"
      "type"
      "style"
      "capacity"
      "dimensions"
      "unitNumber"
      "rent_sale"
      "price"
      "deposit"
      "description"
      "feature"
      "image"
    ]
  ) {
  id: ID!
  type: String!
  style: String
  capacity: Int!
  dimensions: String
  unitNumber: String
  rent_sale: String
  price: Int
  deposit: Int
  description: String
  feature: [String]
  image: String!

  residenceID: ID!
  residence: Residence @connection(fields: ["residenceID"])
}

type Notification @model {
  id: ID!
  title: String!
  description: String!
  lastUpdated: String!
  hasRead: [String]
}
